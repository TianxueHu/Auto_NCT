rn2notes('ii/iv','c')
rn2notes('ii/iv','d')
rn2notes('ii/vii','d')
rn2notes('ii/vii','d')
rn2notes('iii','c')
rn2notes('v','c')
rn2notes('vii','c')
rn2notes('iii','c')
rn2notes('v','c')
rn2notes('vii','c')
rn2notes('C','c')
romanroot <- c(
I = 1,
C = 1,
II = 3,
III = 5,
IV = 0,
V = 2,
VI = 4,
VII= 6
)
rn2notes('C','c')
setwd('/Users/tianxuehu/Documents/MUSI7100/MusicDatasets/TAVERN-master/Beethoven/B063/Joined')
library(gtools)
library(stringi)
library(stringr)
rm(list = ls())
romanroot <- c(
I = 1,
C = 1,
II = 3,
III = 5,
IV = 0,
V = 2,
VI = 4,
VII= 6
)
keynames=c('f','c','g','d','a','e','b')
rn2root <-function(rn){
rn <- toupper(rn)
rn <- stri_extract_first(rn,regex = "[VI]{1,3}")
romanroot[rn]
}
keyquality <- function(key){
keyquality<-'M'
if(grepl("^[[:lower:]]+$",key)==TRUE){
#minor key
keyquality<-'m'
}
}
chordType <- function(rn){
#HAVEN'T CONSIDER +/- sixth/third CHORD YET!!!
if(grepl("^[[:lower:]]+$", substring(rn,1,1)) == TRUE){
thisChordType <-'MinorTriad'
if(grepl("[o]", rn)==TRUE){
thisChordType <-'DimTriad'
if(grepl("[D]", rn)==TRUE){
thisChordType <-'FullDim7th'
}else if(grepl("[m]", rn)==TRUE){
thisChordType <-'HalfDim7th'
}
}else if(grepl("[7^o]", rn)==TRUE){
thisChordType <-'Minor7th'
}
}else if(grepl("[+]", rn) == TRUE){
thisChordType <-'AugTriad'
}else if(grepl("[C]", rn) == TRUE){
thisChordType <-'Cadential'
}else if(grepl("[N]", rn) == TRUE){
thisChordType <-'Neopolitan'
}else{
thisChordType <-'MajorTriad'
if(grepl("[7]", rn) == TRUE){
thisChordType <-'Major7th'
if(grepl("[-]", rn) == TRUE){
thisChordType <-'Dom7th'
}
}
}
thisChordType
}
scales=list(
M=c(0,2,4,-1,1,3,5),
m=c(0,2,-3,-1,1,-4,-2)
)
modulation.root=function(roman,keyquality='M'){
roots=c('i','ii','iii','iv','v','vi','vii')
scaledeg=match(tolower(gsub('[^IViv]','',roman)),roots)
modroot=scales[[keyquality]][scaledeg]
if(grepl('vii',roman) & keyquality=='m') modroot=5
if(grepl('^[-b]',roman) & keyquality=='M') modroot=modroot-7
if(grepl('^[#]',roman)) modroot=modroot+7
modroot
}
rn2notes <- function(rn, keyname) {
keyqual<-keyquality(keyname)
keyname <- tolower(keyname)
key=match(keyname,keynames)
modroot <-0
#applied chord
if(grepl("/",rn) == TRUE){
locatevalue<-as.numeric(str_locate(rn, "/")[1,1])
roman <- rn
#extract chord part
rn<-substr(roman, start = 0,stop=locatevalue-1)
#extract modulation part
modulation<-substr(roman, start =locatevalue+1,stop =nchar(roman))
modroot <- modulation.root(modulation, keyqual)
}
thisChordType<-chordType(rn)
root <- rn2root(rn)
chordtype <- list(MajorTriad = c(0,1,4),MinorTriad = c(0,1,-3, 9), AugTriad=c(0,4,8),
Major7th=c(0,1,4,5), Dom7th=c(0,1,4,-2, 10), Minor7th=c(0,1,-3,-2,9,10), DimTriad = c(0,-3,-6,9,6),
HalfDim7th = c(0,-3,-6,-2,9,6,10), FullDim7th = c(0,-3,-6, 3,9,6),
Cadential=c(0,-1,3,11),Ninth = c(0,1,4,5,2))
fifths2notes(root + modroot + chordtype[[thisChordType]])
}
fifths2notes <- function(fifth) {
letternames <- c('0' = '4', '1' = '1', '2' = '5', '3' = '2', '4' = '6', '5' = '3', '6' = '7')
lettername <- letternames[as.character(fifth %% 7)]
alteration <- fifth %/% 7
accidental <- ifelse(alteration > 0, "+", "-")
accidental <- strrep(accidental, abs(alteration))
paste0(lettername, accidental)
}
rn2notes('ii/vii','d')
rn2notes('C','c')
rn2notes('v','c')
rn2notes('vii','c')
rn2notes('i/vii','d')
rn2notes('i/v','d')
rn2notes('I/v','d')
rn2notes('C','c')
rn2notes('I+','d')
chordType <- function(rn){
#HAVEN'T CONSIDER +/- sixth/third CHORD YET!!!
if(grepl("^[[:lower:]]+$", substring(rn,1,1)) == TRUE){
thisChordType <-'MinorTriad'
if(grepl("[o]", rn)==TRUE){
thisChordType <-'DimTriad'
if(grepl("[D]", rn)==TRUE){
thisChordType <-'FullDim7th'
}else if(grepl("[m]", rn)==TRUE){
thisChordType <-'HalfDim7th'
}
}else if(grepl("[7^o]", rn)==TRUE){
thisChordType <-'Minor7th'
}
}else if(grepl("[+]", rn) == TRUE){
thisChordType <-'AugTriad'
}else if(rn=='C'){
thisChordType <-'Cadential'
}else if(grepl("[N]", rn) == TRUE){
thisChordType <-'Neopolitan'
}else{
thisChordType <-'MajorTriad'
if(grepl("[7]", rn) == TRUE){
thisChordType <-'Major7th'
if(grepl("[-]", rn) == TRUE){
thisChordType <-'Dom7th'
}
}
}
thisChordType
}
rn2notes('C','c')
grepl("[C]", 'C')
grepl("[C]", 'n')
grepl("[C]", 'c')
rn2notes('N','c')
rn2notes <- function(rn, keyname) {
keyqual<-keyquality(keyname)
keyname <- tolower(keyname)
key=match(keyname,keynames)
modroot <-0
#applied chord
if(grepl("/",rn) == TRUE){
locatevalue<-as.numeric(str_locate(rn, "/")[1,1])
roman <- rn
#extract chord part
rn<-substr(roman, start = 0,stop=locatevalue-1)
#extract modulation part
modulation<-substr(roman, start =locatevalue+1,stop =nchar(roman))
modroot <- modulation.root(modulation, keyqual)
}
thisChordType<-chordType(rn)
root <- rn2root(rn)
chordtype <- list(MajorTriad = c(0,1,4),MinorTriad = c(0,1,-3, 9), AugTriad=c(0,4,8),
Major7th=c(0,1,4,5), Dom7th=c(0,1,4,-2, 10), Minor7th=c(0,1,-3,-2,9,10), DimTriad = c(0,-3,-6,9,6),
HalfDim7th = c(0,-3,-6,-2,9,6,10), FullDim7th = c(0,-3,-6, 3,9,6),
Cadential=c(0,-1,3,11),Ninth = c(0,1,4,5,2))
print(thisChordType)
fifths2notes(root + modroot + chordtype[[thisChordType]])
}
grepl("[C]", 'c')
rn2notes('C','c')
rn2notes <- function(rn, keyname) {
keyqual<-keyquality(keyname)
keyname <- tolower(keyname)
key=match(keyname,keynames)
modroot <-0
#applied chord
if(grepl("/",rn) == TRUE){
locatevalue<-as.numeric(str_locate(rn, "/")[1,1])
roman <- rn
#extract chord part
rn<-substr(roman, start = 0,stop=locatevalue-1)
#extract modulation part
modulation<-substr(roman, start =locatevalue+1,stop =nchar(roman))
modroot <- modulation.root(modulation, keyqual)
}
thisChordType<-chordType(rn)
root <- rn2root(rn)
if (grepl("[C]", rn) == TRUE){
root <-0
}
chordtype <- list(MajorTriad = c(0,1,4),MinorTriad = c(0,1,-3, 9), AugTriad=c(0,4,8),
Major7th=c(0,1,4,5), Dom7th=c(0,1,4,-2, 10), Minor7th=c(0,1,-3,-2,9,10), DimTriad = c(0,-3,-6,9,6),
HalfDim7th = c(0,-3,-6,-2,9,6,10), FullDim7th = c(0,-3,-6, 3,9,6),
Cadential=c(0,-1,3,11),Ninth = c(0,1,4,5,2))
fifths2notes(root + modroot + chordtype[[thisChordType]])
}
fifths2notes <- function(fifth) {
letternames <- c('0' = '4', '1' = '1', '2' = '5', '3' = '2', '4' = '6', '5' = '3', '6' = '7')
lettername <- letternames[as.character(fifth %% 7)]
alteration <- fifth %/% 7
accidental <- ifelse(alteration > 0, "+", "-")
accidental <- strrep(accidental, abs(alteration))
paste0(lettername, accidental)
}
rn2notes('C','c')
rn2notes('v','c')
rn2notes('C','c')
rn2notes <- function(rn, keyname) {
keyqual<-keyquality(keyname)
keyname <- tolower(keyname)
key=match(keyname,keynames)
modroot <-0
#applied chord
if(grepl("/",rn) == TRUE){
locatevalue<-as.numeric(str_locate(rn, "/")[1,1])
roman <- rn
#extract chord part
rn<-substr(roman, start = 0,stop=locatevalue-1)
#extract modulation part
modulation<-substr(roman, start =locatevalue+1,stop =nchar(roman))
modroot <- modulation.root(modulation, keyqual)
}
thisChordType<-chordType(rn)
root <- rn2root(rn)
if (grepl("[C]", rn) == TRUE){
root <-0
}
chordtype <- list(MajorTriad = c(0,1,4),MinorTriad = c(0,1,-3, 9), AugTriad=c(0,4,8),
Major7th=c(0,1,4,5), Dom7th=c(0,1,4,-2, 10), Minor7th=c(0,1,-3,-2,9,10), DimTriad = c(0,-3,-6,9,6),
HalfDim7th = c(0,-3,-6,-2,9,6,10), FullDim7th = c(0,-3,-6, 3,9,6),
Cadential=c(0,-2,3,10),Ninth = c(0,1,4,5,2))
fifths2notes(root + modroot + chordtype[[thisChordType]])
}
rn2notes('C','c')
rn2root <-function(rn){
rn <- toupper(rn)
rn <- stri_extract_first(rn,regex = "[VI]{1,3}")
root <-romanroot[rn]
if (grepl("[C]", rn) == TRUE){
root <-1
}
}
rn2notes <- function(rn, keyname) {
keyqual<-keyquality(keyname)
keyname <- tolower(keyname)
key=match(keyname,keynames)
modroot <-0
#applied chord
if(grepl("/",rn) == TRUE){
locatevalue<-as.numeric(str_locate(rn, "/")[1,1])
roman <- rn
#extract chord part
rn<-substr(roman, start = 0,stop=locatevalue-1)
#extract modulation part
modulation<-substr(roman, start =locatevalue+1,stop =nchar(roman))
modroot <- modulation.root(modulation, keyqual)
}
thisChordType<-chordType(rn)
root <- rn2root(rn)
chordtype <- list(MajorTriad = c(0,1,4),MinorTriad = c(0,1,-3, 9), AugTriad=c(0,4,8),
Major7th=c(0,1,4,5), Dom7th=c(0,1,4,-2, 10), Minor7th=c(0,1,-3,-2,9,10), DimTriad = c(0,-3,-6,9,6),
HalfDim7th = c(0,-3,-6,-2,9,6,10), FullDim7th = c(0,-3,-6, 3,9,6),
Cadential=c(0,-2,3,10),Ninth = c(0,1,4,5,2))
fifths2notes(root + modroot + chordtype[[thisChordType]])
}
rn2notes('C','c')
rn2root <-function(rn){
rn <- toupper(rn)
rn <- stri_extract_first(rn,regex = "[VI]{1,3}")
root <-romanroot[rn]
if (grepl("[C]", rn) == TRUE){
root <-1
}
root
}
rn2notes('C','c')
rn2notes('I+','d')
setwd('/Users/tianxuehu/Documents/MUSI7100/MusicDatasets/TAVERN-master/Beethoven/B063/Joined')
library(gtools)
library(stringi)
library(stringr)
rm(list = ls())
romanroot <- c(
I = 1,
C = 1,
II = 3,
III = 5,
IV = 0,
V = 2,
VI = 4,
VII= 6
)
keynames=c('f','c','g','d','a','e','b')
rn2root <-function(rn){
rn <- toupper(rn)
rn <- stri_extract_first(rn,regex = "[VI]{1,3}")
root <-romanroot[rn]
if (grepl("[C]", rn) == TRUE){
root <-1
}
root
}
keyquality <- function(key){
keyquality<-'M'
if(grepl("^[[:lower:]]+$",key)==TRUE){
#minor key
keyquality<-'m'
}
}
chordType <- function(rn){
#HAVEN'T CONSIDER +/- sixth/third CHORD YET!!!
if(grepl("^[[:lower:]]+$", substring(rn,1,1)) == TRUE){
thisChordType <-'MinorTriad'
if(grepl("[o]", rn)==TRUE){
thisChordType <-'DimTriad'
if(grepl("[D]", rn)==TRUE){
thisChordType <-'FullDim7th'
}else if(grepl("[m]", rn)==TRUE){
thisChordType <-'HalfDim7th'
}
}else if(grepl("[7^o]", rn)==TRUE){
thisChordType <-'Minor7th'
}
}else if(grepl("[+]", rn) == TRUE){
thisChordType <-'AugTriad'
}else if(grepl("[C]", rn) == TRUE){
thisChordType <-'Cadential'
}else if(grepl("[N]", rn) == TRUE){
thisChordType <-'Neopolitan'
}else{
thisChordType <-'MajorTriad'
if(grepl("[7]", rn) == TRUE){
thisChordType <-'Major7th'
if(grepl("[-]", rn) == TRUE){
thisChordType <-'Dom7th'
}
}
}
thisChordType
}
scales=list(
M=c(0,2,4,-1,1,3,5),
m=c(0,2,-3,-1,1,-4,-2)
)
modulation.root=function(roman,keyquality='M'){
roots=c('i','ii','iii','iv','v','vi','vii')
scaledeg=match(tolower(gsub('[^IViv]','',roman)),roots)
modroot=scales[[keyquality]][scaledeg]
if(grepl('vii',roman) & keyquality=='m') modroot=5
if(grepl('^[-b]',roman) & keyquality=='M') modroot=modroot-7
if(grepl('^[#]',roman)) modroot=modroot+7
modroot
}
rn2notes <- function(rn, keyname) {
keyqual<-keyquality(keyname)
keyname <- tolower(keyname)
key=match(keyname,keynames)
modroot <-0
#applied chord
if(grepl("/",rn) == TRUE){
locatevalue<-as.numeric(str_locate(rn, "/")[1,1])
roman <- rn
#extract chord part
rn<-substr(roman, start = 0,stop=locatevalue-1)
#extract modulation part
modulation<-substr(roman, start =locatevalue+1,stop =nchar(roman))
modroot <- modulation.root(modulation, keyqual)
}
thisChordType<-chordType(rn)
root <- rn2root(rn)
chordtype <- list(MajorTriad = c(0,1,4),MinorTriad = c(0,1,-3, 9), AugTriad=c(0,4,8),
Major7th=c(0,1,4,5), Dom7th=c(0,1,4,-2, 10), Minor7th=c(0,1,-3,-2,9,10), DimTriad = c(0,-3,-6,9,6),
HalfDim7th = c(0,-3,-6,-2,9,6,10), FullDim7th = c(0,-3,-6, 3,9,6),
Cadential=c(0,-2,3,10),Ninth = c(0,1,4,5,2))
fifths2notes(root + modroot + chordtype[[thisChordType]])
}
fifths2notes <- function(fifth) {
letternames <- c('0' = '4', '1' = '1', '2' = '5', '3' = '2', '4' = '6', '5' = '3', '6' = '7')
lettername <- letternames[as.character(fifth %% 7)]
alteration <- fifth %/% 7
accidental <- ifelse(alteration > 0, "+", "-")
accidental <- strrep(accidental, abs(alteration))
paste0(lettername, accidental)
}
rn2notes('I+','d')
rn2notes('C','c')
rn2notes('v','c')
rn2notes('vii','c')
rn2notes <- function(rn, keyname) {
keyqual<-keyquality(keyname)
keyname <- tolower(keyname)
key=match(keyname,keynames)
modroot <-0
#applied chord
if(grepl("/",rn) == TRUE){
locatevalue<-as.numeric(str_locate(rn, "/")[1,1])
roman <- rn
#extract chord part
rn<-substr(roman, start = 0,stop=locatevalue-1)
#extract modulation part
modulation<-substr(roman, start =locatevalue+1,stop =nchar(roman))
modroot <- modulation.root(modulation, keyqual)
}
thisChordType<-chordType(rn)
root <- rn2root(rn)
chordtype <- list(MajorTriad = c(0,1,4),MinorTriad = c(0,1,-3, 9), AugTriad=c(0,4,8),
Major7th=c(0,1,4,5), Dom7th=c(0,1,4,-2, 10), Minor7th=c(0,1,-3,-2,9,10), DimTriad = c(0,-3,-6,9,6),
HalfDim7th = c(0,-3,-6,-2,9,6,10), FullDim7th = c(0,-3,-6, 3,9,6),
Cadential=c(0,-2,3,10),Ninth = c(0,1,4,5,2))
print(chordtype[[thisChordType]])
fifths2notes(root + modroot + chordtype[[thisChordType]])
}
rn2notes('C','c')
rn2notes <- function(rn, keyname) {
keyqual<-keyquality(keyname)
keyname <- tolower(keyname)
key=match(keyname,keynames)
modroot <-0
#applied chord
if(grepl("/",rn) == TRUE){
locatevalue<-as.numeric(str_locate(rn, "/")[1,1])
roman <- rn
#extract chord part
rn<-substr(roman, start = 0,stop=locatevalue-1)
#extract modulation part
modulation<-substr(roman, start =locatevalue+1,stop =nchar(roman))
modroot <- modulation.root(modulation, keyqual)
}
thisChordType<-chordType(rn)
root <- rn2root(rn)
chordtype <- list(MajorTriad = c(0,1,4),MinorTriad = c(0,1,-3, 9), AugTriad=c(0,4,8),
Major7th=c(0,1,4,5), Dom7th=c(0,1,4,-2, 10), Minor7th=c(0,1,-3,-2,9,10), DimTriad = c(0,-3,-6,9,6),
HalfDim7th = c(0,-3,-6,-2,9,6,10), FullDim7th = c(0,-3,-6, 3,9,6),
Cadential=c(0,-2,3,10),Ninth = c(0,1,4,5,2))
print(chordtype[[thisChordType]])
print (root)
fifths2notes(root + modroot + chordtype[[thisChordType]])
}
rn2notes('C','c')
rn2root <-function(rn){
rn <- toupper(rn)
rn <- stri_extract_first(rn,regex = "[VI]{1,3}")
root <-romanroot[rn]
if (grepl("[C]", rn) == TRUE){
root <-1
}
root
}
rn2notes('C','c')
rn2root <-function(rn){
rn <- toupper(rn)
rn <- stri_extract_first(rn,regex = "[VICN]{1,3}")
root <-romanroot[rn]
if (grepl("[C]", rn) == TRUE){
root <-1
}
root
}
rn2notes('C','c')
rn2notes <- function(rn, keyname) {
keyqual<-keyquality(keyname)
keyname <- tolower(keyname)
key=match(keyname,keynames)
modroot <-0
#applied chord
if(grepl("/",rn) == TRUE){
locatevalue<-as.numeric(str_locate(rn, "/")[1,1])
roman <- rn
#extract chord part
rn<-substr(roman, start = 0,stop=locatevalue-1)
#extract modulation part
modulation<-substr(roman, start =locatevalue+1,stop =nchar(roman))
modroot <- modulation.root(modulation, keyqual)
}
thisChordType<-chordType(rn)
root <- rn2root(rn)
chordtype <- list(MajorTriad = c(0,1,4),MinorTriad = c(0,1,-3, 9), AugTriad=c(0,4,8),
Major7th=c(0,1,4,5), Dom7th=c(0,1,4,-2, 10), Minor7th=c(0,1,-3,-2,9,10), DimTriad = c(0,-3,-6,9,6),
HalfDim7th = c(0,-3,-6,-2,9,6,10), FullDim7th = c(0,-3,-6, 3,9,6),
Cadential=c(0,-1,3,11),Ninth = c(0,1,4,5,2))
print(chordtype[[thisChordType]])
print (root)
fifths2notes(root + modroot + chordtype[[thisChordType]])
}
rn2notes('C','c')
rn2notes('v/iii','c')
